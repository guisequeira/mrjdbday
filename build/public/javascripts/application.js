// Generated by CoffeeScript 1.6.3
this.myApp = angular.module('mrJackBirtdayApp', ['ngRoute', 'ngAnimate', 'ngCookies', 'ngResource']);

/* --------------------------------------------
     Begin initializers.coffee
--------------------------------------------
*/


this.myApp.constant("view_path", "public/views");

this.myApp.constant("directive_view_path", "public/views/common");

this.myApp.run(function($rootScope, $route, $location, $cookieStore) {
  return $rootScope.ageDateCookie = $cookieStore.get('ageGateLogged');
});

/* --------------------------------------------
     Begin routes.coffee
--------------------------------------------
*/


this.myApp.config(function($httpProvider, $routeProvider, view_path) {
  return $routeProvider.when("/", {
    controller: "HomeController",
    templateUrl: "" + view_path + "/templates/home.html",
    page_class: 'home',
    logged: true
  }).when("/video", {
    controller: "VideoController",
    templateUrl: "" + view_path + "/common/video.html",
    page_class: 'video',
    video_id: 'HLpzRRtyjXY'
  }).when("/autenticidade", {
    controller: "AboutController",
    templateUrl: "" + view_path + "/templates/autenticidade.html",
    page_class: 'about'
  }).when("/autenticidade/galeria", {
    controller: "GaleriaController",
    templateUrl: "" + view_path + "/common/galeria.html",
    page_class: 'galeria',
    data: {
      area: 'autenticidade',
      total_images: 5
    }
  }).when("/autenticidade/360", {
    controller: "View360Controller",
    templateUrl: "" + view_path + "/templates/autenticidade-view360.html",
    page_class: 'galeria',
    data: {
      area: 'autenticidade'
    }
  }).when("/autenticidade/video", {
    controller: "VideoController",
    templateUrl: "" + view_path + "/common/video.html",
    page_class: 'video',
    video_id: 'HLpzRRtyjXY'
  }).when("/independencia", {
    controller: "AboutController",
    templateUrl: "" + view_path + "/templates/independencia.html",
    page_class: 'about'
  }).when("/independencia/galeria", {
    controller: "GaleriaController",
    templateUrl: "" + view_path + "/common/galeria.html",
    page_class: 'galeria',
    data: {
      area: 'independencia',
      total_images: 5
    }
  }).when("/independencia/360", {
    controller: "View360Controller",
    templateUrl: "" + view_path + "/templates/independencia-view360.html",
    page_class: 'galeria',
    data: {
      area: 'independencia'
    }
  }).when("/independencia/video", {
    controller: "VideoController",
    templateUrl: "" + view_path + "/common/video.html",
    page_class: 'video',
    video_id: 'HLpzRRtyjXY'
  }).when("/integridade", {
    controller: "AboutController",
    templateUrl: "" + view_path + "/templates/integridade.html",
    page_class: 'about'
  }).when("/integridade/galeria", {
    controller: "GaleriaController",
    templateUrl: "" + view_path + "/common/galeria.html",
    page_class: 'galeria',
    data: {
      area: 'integridade',
      total_images: 6
    }
  }).when("/integridade/360", {
    controller: "View360Controller",
    templateUrl: "" + view_path + "/templates/integridade-view360.html",
    page_class: 'galeria',
    data: {
      area: 'integridade'
    }
  }).when("/integridade/video", {
    controller: "VideoController",
    templateUrl: "" + view_path + "/common/video.html",
    page_class: 'video',
    video_id: 'HLpzRRtyjXY'
  }).when("/age-gate", {
    controller: "AgeGateController",
    templateUrl: "" + view_path + "/templates/age-gate.html"
  }).when("/termos-de-uso", {
    controller: "TermosController",
    templateUrl: "" + view_path + "/templates/termos-de-uso.html"
  }).when("/politica-de-privacidade", {
    controller: "PoliticaController",
    templateUrl: "" + view_path + "/templates/politica-de-privacidade.html"
  });
});

/* --------------------------------------------
     Begin home_controller.coffee
--------------------------------------------
*/


this.myApp.controller("HomeController", function($scope, $timeout, $rootScope) {
  var anchorControll, completeLoader, current_loaded, timeoutId, total_loaded;
  $scope.pageClass = 'home';
  total_loaded = 5;
  current_loaded = 0;
  timeoutId = null;
  anchorControll = function() {
    var top;
    if ($rootScope.prev_path !== void 0) {
      switch ($rootScope.prev_path) {
        case 'independencia':
          top = $("#independencia").offset().top + $(".main-view").scrollTop();
          return $(".main-view").scrollTop(top);
        case 'autenticidade':
          top = $("#autenticidade").offset().top + $(".main-view").scrollTop();
          return $(".main-view").scrollTop(top);
        case 'integridade':
          top = $("#integridade").offset().top + $(".main-view").scrollTop();
          return $(".main-view").scrollTop(top);
      }
    }
  };
  completeLoader = function() {
    return timeoutId = $timeout(function() {
      $('.page.home').show();
      anchorControll();
      $scope.InitMrJack();
      $scope.InitTopicView('independencia');
      $scope.InitTopicView('autenticidade');
      $scope.InitTopicView('integridade');
      $scope.InitJackSaloon();
      return $timeout.cancel(timeoutId);
    }, 600);
  };
  return $scope.init = function(event) {
    current_loaded += 1;
    if (current_loaded === total_loaded) {
      $('.page.home').hide();
      return $scope.initLoader(completeLoader);
    }
  };
});

/* --------------------------------------------
     Begin video_controller.coffee
--------------------------------------------
*/


this.myApp.controller("VideoController", function($scope, $route) {
  var firstScriptTag, tag;
  $scope.pageClass = 'video';
  $scope.code = $route.current.video_id;
  $scope.player_state = 1;
  $('.playIcon').show();
  $('.pauseIcon').hide();
  $('.videoContainer').hide();
  if (typeof window.youtube_api_init === "undefined") {
    tag = document.createElement("script");
    tag.src = "https://www.youtube.com/iframe_api";
    firstScriptTag = document.getElementsByTagName("script")[0];
    firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);
  }
  if (typeof window.youtube_api_init !== 'undefined') {
    window.onYouTubeIframeAPIReady();
  }
  $scope.$on("$destroy", function() {
    player.destroy();
    return $('.videoContainer').hide();
  });
  $scope.playVideo = function() {
    if (player.getPlayerState() === 1) {
      return player.pauseVideo();
    } else {
      return player.playVideo();
    }
  };
  window.onYouTubeIframeAPIReady = function() {
    window.player = new YT.Player("player", {
      height: "100%",
      width: "100%",
      videoId: $scope.code,
      playerVars: {
        enablejsapi: 1,
        showinfo: 0,
        controls: 0,
        allowFullScreen: "true"
      },
      events: {
        onReady: $scope.onPlayerReady,
        onStateChange: $scope.onPlayerStateChange
      }
    });
    return window.youtube_api_init = 1;
  };
  $scope.onPlayerReady = function(event) {
    return $('.videoContainer').delay(700).fadeIn();
  };
  return $scope.onPlayerStateChange = function(event) {
    if (event.data === 1) {
      $('.playIcon').hide();
      return $('.pauseIcon').show();
    } else {
      $('.playIcon').show();
      return $('.pauseIcon').hide();
    }
  };
});

/* --------------------------------------------
     Begin about_controller.coffee
--------------------------------------------
*/


this.myApp.controller("AboutController", function($scope, $timeout) {
  var completeLoader;
  $scope.timeoutId = null;
  $scope.pageClass = 'about';
  $('.wrapper').hide();
  completeLoader = function() {
    var timeoutId;
    $('.wrapper').show();
    return timeoutId = $timeout(function() {
      $scope.StartTitle($('.artistName'));
      return $timeout.cancel(timeoutId);
    }, 2500);
  };
  return $scope.timeoutId = $timeout(function() {
    console.log('timeout');
    $scope.initLoader(completeLoader);
    return $timeout.cancel($scope.timeoutId);
  }, 1200);
});

/* --------------------------------------------
     Begin agegate_controller.coffee
--------------------------------------------
*/


this.myApp.controller("AgeGateController", function($scope, $rootScope, $cookieStore, $location, $http) {
  $scope.pageClass = 'age-gate';
  if ($rootScope.ageDateCookie === 'ok') {
    $location.path("/");
  } else {
    $location.path("/age-gate");
  }
  return $("#age-gate form").submit(function() {
    $http({
      method: "POST",
      url: "http://" + window.location.host + window.location.pathname + "webservice/ageGateVilidation.php",
      data: $.param($scope.formData),
      headers: {
        "Content-Type": "application/x-www-form-urlencoded"
      }
    }).success(function(data) {
      if (data.status === true) {
        $cookieStore.put('ageGateLogged', 'ok');
        return $location.path("");
      } else {
        return alert("vc Ã© menor de idade");
      }
    });
    return false;
  });
});

/* --------------------------------------------
     Begin galeria_controller.coffee
--------------------------------------------
*/


this.myApp.controller("GaleriaController", function($scope, $timeout, $route) {
  var completeLoader, i, timeoutId;
  timeoutId = null;
  $scope.mouse_x = false;
  $scope.pos = void 0;
  $scope.index_img = 0;
  $scope.total_images = $route.current.data.total_images;
  $scope.area = $route.current.data.area;
  $scope.images = [];
  i = 0;
  while (i < $scope.total_images) {
    $scope.images.push({
      src: 'public/images/' + $scope.area + '/galeria/' + String(i) + '.jpg',
      index: i
    });
    i++;
  }
  $('.wrapper-img').hide();
  $(window).resize(function() {
    var displayHeight, fullHeight, fullWidth, newMargin;
    fullWidth = 1248;
    fullHeight = 840;
    displayHeight = $(window).height();
    newMargin = fullWidth * (displayHeight / fullHeight);
    return $('.wrapper-img img.ng-scope').css('margin-left', -newMargin / 2 + 'px');
  });
  timeoutId = $timeout(function() {
    $timeout.cancel(timeoutId);
    return $scope.initLoader(completeLoader);
  }, 100);
  $scope.isActive = function(index) {
    return $scope.index_img === index;
  };
  $scope.showPrev = function() {
    if ($scope.index_img > 0) {
      return $scope.index_img += -1;
    } else {
      return $scope.index_img = $scope.images.length - 1;
    }
  };
  $scope.showNext = function() {
    if ($scope.index_img < $scope.images.length - 1) {
      return $scope.index_img += 1;
    } else {
      return $scope.index_img = 0;
    }
  };
  $scope.showPhoto = function() {
    return $scope.index_img = index;
  };
  $scope.onClick = function() {
    if ($scope.pos === 'left') {
      $scope.showPrev();
    }
    if ($scope.pos === 'right') {
      return $scope.showNext();
    }
  };
  $scope.onMouseMove = function(event) {
    var half;
    if ($scope.mouse_active_x) {
      $scope.mouse_x = event.clientX;
      half = $(window).width() / 2;
      if ($scope.mouse_x <= half) {
        $scope.pos = 'left';
        $('.gallery').addClass('prev');
        $('.gallery').removeClass('next');
      } else if ($scope.mouse_x >= half) {
        $scope.pos = 'right';
        $('.gallery').removeClass('prev');
        $('.gallery').addClass('next');
      }
    }
  };
  return completeLoader = function() {
    $('.wrapper-img').delay(500).fadeIn();
    $(window).resize();
    return timeoutId = $timeout(function() {
      $('.gallery').addClass('custon-cursor');
      $scope.mouse_active_x = true;
      return $timeout.cancel(timeoutId);
    }, 1300);
  };
});

/* --------------------------------------------
     Begin view360_controller.coffee
--------------------------------------------
*/


this.myApp.controller("View360Controller", function($scope, $timeout, $route) {
  var $threeSixty, count, current_pos, fps, fps_max, fps_min, max_count, timeoutId;
  $scope.pageClass = 'view-360';
  $scope.pos = 'center';
  $scope.zoomOpened = false;
  timeoutId = null;
  $scope.mouse_active_x = false;
  $scope.mouse_active_y = false;
  $scope.area = $route.current.data.area;
  $scope.stoped = false;
  count = 0;
  max_count = $('.wraper-images img').length;
  current_pos = void 0;
  fps = null;
  fps_max = Math.floor(1000 / 30);
  fps_min = Math.floor(1000 / 12);
  timeoutId = $timeout(function() {
    $('.wraper-images').addClass('show');
    $timeout.cancel(timeoutId);
    $('.view360').addClass('custon-cursor hand');
  }, 1300);
  $scope.$on("$destroy", function() {
    return $timeout.cancel(timeoutId);
  });
  $threeSixty = $('.wraper-images');
  $threeSixty.threeSixty({
    dragDirection: 'horizontal',
    useKeys: false,
    draggable: true
  });
  $threeSixty.on("down", function() {
    $('.controls').fadeOut();
    $('.view360').addClass('hand-on');
    return $('.view360').removeClass('zoom');
  });
  $threeSixty.on("up", function() {
    $('.controls').fadeIn();
    $('.view360').addClass('hand');
    return $('.view360').removeClass('hand-on');
  });
  return $('.bt-zoom').click(function() {
    $scope.zoomOpened = !$scope.zoomOpened;
    return console.log('$scope.zoomOpened', $scope.zoomOpened);
  });
});

/* --------------------------------------------
     Begin mastertitle_directive.coffee
--------------------------------------------
*/


this.myApp.directive('masterTitle', function($interval) {
  return {
    restrict: 'A',
    replace: false,
    link: function(scope, element, attrs) {
      var buttons, hideLetter, letters, showLetter, sortLetter, startAnima, timeoutId, timeoutMain;
      timeoutId = null;
      timeoutMain = null;
      letters = [];
      buttons = [];
      element.hide();
      scope.HideTitle = function(title) {
        return title.hide();
      };
      scope.StartTitle = function(title) {
        letters = [];
        buttons = [];
        title.show();
        angular.forEach(title.find('.letter'), function(value, key) {
          $(value).css('opacity', 0);
          return letters.push(value);
        });
        angular.forEach(title.find('.button'), function(value, key) {
          $(value).hide();
          return buttons.push(value);
        });
        return startAnima();
      };
      hideLetter = function(letter) {
        return $(letter).css('opacity', 1);
      };
      showLetter = function(letter) {
        return $(letter).css('opacity', 1);
      };
      sortLetter = function() {
        var d, letter, x;
        x = Math.floor(Math.random() * letters.length);
        letter = letters[x];
        showLetter(letter);
        letters.splice(x, 1);
        if (letters.length === 0) {
          $interval.cancel(timeoutId);
          d = 100;
          return angular.forEach(buttons, function(value, key) {
            $(value).delay(d).fadeIn();
            return d += 500;
          });
        }
      };
      startAnima = function() {
        return timeoutId = $interval(function() {
          sortLetter();
        }, 130);
      };
      scope.$on("$destroy", function() {
        return $interval.cancel(timeoutId);
      });
      return angular.forEach(element.find('.letter'), function(value, key) {
        $(value).css('opacity', 0);
        return letters.push(value);
      });
    }
  };
});

/* --------------------------------------------
     Begin topicview_directive.coffee
--------------------------------------------
*/


this.myApp.directive('topicView', function($interval, $timeout, view_path, $location) {
  return {
    restrict: 'A',
    replace: false,
    scope: true,
    link: function(scope, element, attrs) {
      var active_area, disabledArea, enabledArea, headsArts, hideElements, hideHeaderArts, isVisible, onClick, onMouseMove, pos, showElements, timeoutId;
      timeoutId = null;
      pos = void 0;
      isVisible = false;
      headsArts = [];
      active_area = '';
      hideElements = function() {
        element.find('.wrapper .firstColumn.head').hide();
        element.find('.wrapper .secondColumn').hide();
        element.find('.controls').hide();
        return element.find('.wrapper header').hide();
      };
      showElements = function(main_element) {
        isVisible = true;
        main_element.find('.wrapper .firstColumn.head').show();
        main_element.find('.wrapper header').delay(750).fadeIn();
        main_element.find('.wrapper .secondColumn').delay(1150).fadeIn();
        return main_element.find('.controls').delay(1650).fadeIn();
      };
      hideHeaderArts = function() {
        return angular.forEach(headsArts, function(value, key) {
          return $(value).hide();
        });
      };
      enabledArea = function(main_element) {
        main_element.addClass('custon-cursor');
        main_element.find('.page').off('mousemove', onMouseMove);
        main_element.find('.page').on('mousemove', onMouseMove);
        main_element.find('.page').off('click', onClick);
        return main_element.find('.page').on('click', onClick);
      };
      disabledArea = function(main_element) {
        main_element.removeClass('custon-cursor');
        main_element.find('.page').off('mousemove', onMouseMove);
        return main_element.find('.page').off('click', onClick);
      };
      onClick = function(event) {
        var area_event, gap, half, main_element, mouse_x;
        main_element = $(event.currentTarget).parent().parent();
        area_event = main_element.attr('id');
        half = $(window).width() / 2;
        mouse_x = event.clientX;
        gap = 350;
        if (mouse_x <= half - gap) {
          return main_element.find('.controls a.bt-left').click();
        } else if (mouse_x >= half + gap) {
          return main_element.find('.controls a.bt-right').click();
        } else {
          return main_element.find('.controls a.bt-lupa').click();
        }
      };
      onMouseMove = function(event) {
        var area_event, gap, half, main_element, mouse_x;
        main_element = $(event.currentTarget).parent().parent();
        area_event = main_element.attr('id');
        if (area_event = active_area) {
          half = $(window).width() / 2;
          mouse_x = event.clientX;
          gap = 350;
          scope.changeHeadPos(active_area, event.clientX);
          if (mouse_x <= half - (gap - 30)) {
            main_element.removeClass('detalhes video');
            main_element.addClass('sobre');
            main_element.find('.pageNav li a.selected').removeClass('selected');
            return main_element.find('.pageNav li').eq(0).find('a').addClass('selected');
          } else if (mouse_x >= half + gap) {
            main_element.removeClass('detalhes sobre');
            main_element.addClass('video');
            main_element.find('.pageNav li a.selected').removeClass('selected');
            return main_element.find('.pageNav li').eq(2).find('a').addClass('selected');
          } else {
            main_element.removeClass('video sobre');
            main_element.addClass('detalhes');
            main_element.find('.pageNav li a.selected').removeClass('selected');
            return main_element.find('.pageNav li').eq(1).find('a').addClass('selected');
          }
        } else {

        }
      };
      scope.InitTopicView = function(area_id) {
        var hit_mouseover, section_main;
        section_main = $('#' + area_id);
        hit_mouseover = section_main.find('.wrapper .mouseover-area');
        return section_main.find('.hit-area').bind("inview", function(event, isInView, visiblePartX, visiblePartY) {
          if (isInView) {
            if (visiblePartY === 'both') {
              active_area = area_id;
              if (section_main.find('.wrapper .firstColumn.head').is(':visible')) {
                section_main.find('.controls').show();
                return enabledArea(section_main);
              } else {
                timeoutId = $timeout(function() {
                  enabledArea(section_main);
                  return $timeout.cancel(timeoutId);
                }, 3000);
                return showElements(section_main);
              }
            } else {
              if (section_main.find('.wrapper .firstColumn.head').is(':visible')) {
                if (section_main.find('.controls').is(':visible')) {
                  section_main.find('.controls').hide();
                  disabledArea(section_main);
                  scope.disabledHeader(area_id);
                }
              }
              return $timeout.cancel(timeoutId);
            }
          } else {
            if (section_main.find('.wrapper .firstColumn.head').is(':visible')) {
              if (section_main.find('.controls').is(':visible')) {
                section_main.find('.controls').hide();
                disabledArea(section_main);
                return scope.disabledHeader(area_id);
              }
            }
          }
        });
      };
      return hideElements();
    }
  };
});

/* --------------------------------------------
     Begin header_directive.coffee
--------------------------------------------
*/


this.myApp.directive('mainHeader', function($rootScope, directive_view_path, $location) {
  return {
    restrict: 'A',
    replace: true,
    templateUrl: "" + directive_view_path + "/header.html",
    link: function(scope, element) {
      scope.gotoTopic = function(topic_id) {
        var top;
        scope.isOpem = false;
        top = $("#" + topic_id).offset().top + $(".main-view").scrollTop();
        console.log(top, topic_id);
        if (topic_id === 'home') {
          $(".main-view").animate({
            scrollTop: 0
          }, 750);
          return;
        }
        if (top !== 0) {
          $(".main-view").animate({
            scrollTop: top
          }, 750);
        }
      };
      scope.clickShare = function() {
        return FB.ui({
          method: 'share',
          href: 'http://zone130.doing4.me/2014/brownforman/mrjacksbirthday/#/'
        });
      };
      scope.checkNavHeader = function(bottom) {
        var isShow;
        isShow = true;
        switch (bottom) {
          case 'main':
            isShow = Boolean($location.path() === '/');
            break;
          case 'back':
            isShow = Boolean($location.path() !== '/' && $location.path() !== '/age-gate');
            break;
          case 'share':
            isShow = Boolean($location.path() !== '/age-gate');
        }
        return isShow;
      };
      return scope.isOpem = false;
    }
  };
});

/* --------------------------------------------
     Begin footer_directive.coffee
--------------------------------------------
*/


this.myApp.directive('mainFooter', function(directive_view_path) {
  return {
    restrict: 'A',
    replace: true,
    templateUrl: "" + directive_view_path + "/footer.html",
    link: function(scope, element) {}
  };
});

/* --------------------------------------------
     Begin integridadeview_directive.coffee
--------------------------------------------
*/


this.myApp.directive('integridadeView', function($interval, view_path, $location) {
  return {
    restrict: 'A',
    replace: true,
    templateUrl: "" + view_path + "/home/integridade.html"
  };
});

/* --------------------------------------------
     Begin autenticidadeview_directive.coffee
--------------------------------------------
*/


this.myApp.directive('autenticidadeView', function($interval, view_path, $location) {
  return {
    restrict: 'A',
    replace: true,
    templateUrl: "" + view_path + "/home/autenticidade.html"
  };
});

/* --------------------------------------------
     Begin independenciaview_directive.coffee
--------------------------------------------
*/


this.myApp.directive('independenciaView', function($interval, view_path, $location) {
  return {
    restrict: 'A',
    replace: true,
    templateUrl: "" + view_path + "/home/independencia.html"
  };
});

/* --------------------------------------------
     Begin termosdeuso_controller.coffee
--------------------------------------------
*/


this.myApp.controller("TermosController", function($scope, $animate) {
  return $(".scroll-pane").jScrollPane();
});

/* --------------------------------------------
     Begin imagesplayback_directive.coffee
--------------------------------------------
*/


this.myApp.directive('imagesPlayback', function($interval) {
  return {
    restrict: 'A',
    replace: false,
    link: function(scope, element, attrs) {
      var all_images, changeImage, count, current_area, current_pos, disabled, getCountMouse, gotoFrame, images_center, images_left, images_right, isDisabled, isPlayback, main_elements, map, max_count, min_count, playback, setElements, startInterval, stopInterval, title;
      scope.timeoutId = null;
      current_pos = 'center';
      current_area = void 0;
      isPlayback = false;
      isDisabled = false;
      all_images = void 0;
      images_left = void 0;
      images_right = void 0;
      images_center = void 0;
      main_elements = void 0;
      title = {
        left: void 0,
        right: void 0
      };
      count = 0;
      min_count = 0;
      max_count = 0;
      disabled = true;
      map = function(value, inMin, inMax, outMin, outMax) {
        return (value - inMin) * (outMax - outMin) / (inMax - inMin) + outMin;
      };
      changeImage = function(active_count) {
        var image;
        main_elements.find('img.visible').removeClass('visible');
        image = main_elements.find('img[data-frame="' + active_count + '"]');
        image.addClass('visible');
        count = active_count;
      };
      playback = function() {
        if (title.left.is(':visible')) {
          scope.HideTitle(title.left);
        }
        if (title.right.is(':visible')) {
          scope.HideTitle(title.right);
        }
        if (count === 0) {
          stopInterval();
        }
        if (current_pos === 'left') {
          count += -1;
        } else if (current_pos === 'right') {
          count += 1;
        } else {
          if (count > 0) {
            count += -1;
          } else if (count < 0) {
            count += 1;
          }
        }
        if (count === min_count || count === max_count) {
          if (count > 0) {
            scope.StartTitle(title.right);
          } else {
            scope.StartTitle(title.left);
          }
        }
        return changeImage(count);
      };
      stopInterval = function() {
        isPlayback = false;
        return $interval.cancel(scope.timeoutId);
      };
      startInterval = function() {
        isPlayback = true;
        $interval.cancel(scope.timeoutId);
        return scope.timeoutId = $interval(function() {
          playback();
        }, 60);
      };
      setElements = function(area) {
        current_area = area;
        main_elements = $('#' + current_area + ' .firstColumn.head');
        all_images = main_elements.find('img');
        images_left = main_elements.find('.left img');
        images_right = main_elements.find('.right img');
        images_center = main_elements.find('.center img');
        title.left = $('#' + current_area + ' .mrJackAnimated.left');
        title.right = $('#' + current_area + ' .mrJackAnimated.right');
        min_count = images_left.length * -1;
        return max_count = images_right.length;
      };
      getCountMouse = function(mouse_x) {
        var distance_to_center, half, max_distance;
        half = $(window).width() / 2;
        max_distance = 350;
        distance_to_center = mouse_x - half;
        if (distance_to_center > max_distance) {
          distance_to_center = max_distance;
        } else if (distance_to_center < (max_distance * -1)) {
          distance_to_center = max_distance * -1;
        }
        return Math.floor(map(distance_to_center, -max_distance, max_distance, min_count, max_count));
      };
      gotoFrame = function(frame) {
        if (count === frame) {
          disabled = false;
          stopInterval();
        } else if (frame < 0) {
          count += -1;
        } else {
          count += 1;
        }
        return changeImage(count);
      };
      scope.disabledHeader = function(area) {
        disabled = true;
        setElements(area);
        current_pos = 'center';
        return startInterval();
      };
      scope.playingHead = function(area, mouse_x) {
        var frame;
        isPlayback = true;
        frame = getCountMouse(mouse_x);
        $interval.cancel(scope.timeoutId);
        return scope.timeoutId = $interval(function() {
          gotoFrame(frame);
        }, 60);
      };
      return scope.changeHeadPos = function(area, mouse_x) {
        var count_mouse;
        if (isPlayback) {
          return;
        }
        $interval.cancel(scope.timeoutId);
        if (current_area !== area) {
          setElements(area);
        }
        count_mouse = getCountMouse(mouse_x);
        if (count_mouse < 0) {
          current_pos = 'left';
        } else {
          current_pos = 'right';
        }
        if (disabled) {
          if (count_mouse !== 0) {
            gotoFrame(count_mouse);
            return;
          } else {
            disabled = false;
          }
        }
        if (count_mouse === min_count) {
          if (!title.left.is(':visible')) {
            scope.HideTitle(title.right);
            scope.StartTitle(title.left);
          }
        } else if (count_mouse === max_count) {
          if (!title.right.is(':visible')) {
            scope.HideTitle(title.left);
            scope.StartTitle(title.right);
          }
        } else {
          if (title.left.is(':visible')) {
            scope.HideTitle(title.left);
          }
          if (title.right.is(':visible')) {
            scope.HideTitle(title.right);
          }
        }
        return changeImage(count_mouse);
      };
    }
  };
});

/* --------------------------------------------
     Begin mrjack_directive.coffee
--------------------------------------------
*/


this.myApp.directive('mrJackView', function($timeout, view_path, $location) {
  return {
    restrict: 'A',
    replace: true,
    templateUrl: "" + view_path + "/home/mr-jack.html",
    link: function(scope, element, attrs) {
      var arr_index_images, btPlay, clone_arr, current_image, framesIntro, introFinish, lastTimeMouseMoved, onMouseEvent, playback, showImage, speed, startTimeout, stoped, timeoutId, timeoutmouse, title, total_images;
      title = element.find('.mrJackAnimated');
      btPlay = element.find('.openVideo');
      timeoutId = null;
      timeoutmouse = null;
      stoped = false;
      lastTimeMouseMoved = null;
      framesIntro = false;
      speed = 40;
      btPlay.hide();
      total_images = element.find('.firstColumn img').length;
      current_image = 0;
      arr_index_images = [];
      clone_arr = [];
      element.find('.wrapper').hide();
      scope.$on("$destroy", function() {
        return $timeout.cancel(timeoutId);
      });
      showImage = function(index) {
        element.find('img.head-jack').removeClass('visible');
        element.find('img.random-images.visible').removeClass('visible');
        return element.find('img.random-images').eq(index).addClass('visible');
      };
      startTimeout = function() {
        $timeout.cancel(timeoutmouse);
        return timeoutmouse = $timeout(function() {
          return playback();
        }, 160);
      };
      introFinish = function() {
        framesIntro = false;
        element.find('img.head-jack').addClass('visible');
        element.find('img.random-images.visible').removeClass('visible');
        $('.mrJackAnimated').on('mouseenter', onMouseEvent);
        return $('.mrJackAnimated').on('mouseleave', onMouseEvent);
      };
      playback = function() {
        var index, x;
        stoped = false;
        x = Math.floor(Math.random() * clone_arr.length);
        index = clone_arr[x];
        clone_arr.splice(x, 1);
        showImage(index);
        if (clone_arr.length === 0) {
          if (framesIntro) {
            $timeout.cancel(timeoutmouse);
            return introFinish();
          } else {
            clone_arr = arr_index_images.slice(0);
            return startTimeout();
          }
        } else {
          return startTimeout();
        }
      };
      onMouseEvent = function(event) {
        switch (event.type) {
          case 'mouseenter':
            $(event.currentTarget).find('.openVideo').addClass('active');
            return playback();
          case 'mouseleave':
            $(event.currentTarget).find('.openVideo').removeClass('active');
            element.find('img.head-jack').addClass('visible');
            element.find('img.random-images.visible').removeClass('visible');
            return $timeout.cancel(timeoutmouse);
        }
      };
      return scope.InitMrJack = function() {
        element.find('.wrapper').show();
        angular.forEach(element.find('img.random-images'), function(value, key) {
          return arr_index_images.push(key);
        });
        framesIntro = true;
        clone_arr = arr_index_images.slice(0);
        timeoutmouse = $timeout(function() {
          return playback();
        }, 1000);
        return timeoutId = $timeout(function() {
          scope.StartTitle(title);
          $timeout.cancel(timeoutId);
        }, 1800);
      };
    }
  };
});

/* --------------------------------------------
     Begin youtube_directive.coffee
--------------------------------------------
*/


this.myApp.directive('youtubeView', function($sce, directive_view_path) {
  return {
    restrict: 'EA',
    scope: {
      code: '='
    },
    template: '<iframe style="overflow:hidden;height:100%;width:100%" width="100%" height="100%" src="{{url}}" frameborder="0" allowfullscreen></iframe>',
    link: function(scope, element) {
      scope.$watch('code', function(newVal) {
        if (newVal) {
          return scope.url = $sce.trustAsResourceUrl("http://www.youtube.com/embed/" + newVal + "?autoplay=0&showinfo=0&controls=0&enablejsapi=1");
        }
      });
      return window.onYouTubePlayerReady = function(player) {
        return console.log('window.onYouTubePlayerReady', event);
      };
    }
  };
});

/* --------------------------------------------
     Begin jack-saloon_directive.coffee
--------------------------------------------
*/


this.myApp.directive('jackSaloonView', function(view_path) {
  return {
    restrict: 'A',
    replace: true,
    templateUrl: "" + view_path + "/home/jack-saloon.html",
    link: function(scope, element, attrs) {
      scope.InitJackSaloon = function() {
        return element.find('.hit-area').bind("inview", function(event, isInView, visiblePartX, visiblePartY) {
          if (visiblePartY === 'both') {
            return element.find('.wrapper').show();
          }
        });
      };
      return element.find('.wrapper').hide();
    }
  };
});

/* --------------------------------------------
     Begin loader_directive.coffee
--------------------------------------------
*/


this.myApp.directive('mainLoader', function() {
  return {
    restrict: 'A',
    replace: false,
    link: function(scope, element, attrs) {
      var completeCallBack;
      scope.percentage_loading = 0;
      element.hide();
      scope.listManifest = [];
      completeCallBack = null;
      scope.handleFileLoad = function(evt) {};
      scope.handleOverallProgress = function(evt) {
        return element.find('.fill').css('height', Math.floor(evt.loaded * 100) + '%');
      };
      scope.handleFileError = function(evt) {};
      scope.handleComplete = function(evt) {
        if (completeCallBack !== null) {
          completeCallBack();
          return element.hide();
        }
      };
      return scope.initLoader = function(callback) {
        var preloader;
        completeCallBack = callback;
        element.show();
        angular.forEach($('.preloader-image'), function(value, key) {
          var url;
          url = $(value).attr('src');
          return scope.listManifest.push({
            src: url,
            id: 'image' + key
          });
        });
        preloader = new createjs.LoadQueue(true);
        preloader.addEventListener("fileload", scope.handleFileLoad);
        preloader.addEventListener("progress", scope.handleOverallProgress);
        preloader.addEventListener("error", scope.handleFileError);
        preloader.addEventListener("complete", scope.handleComplete);
        return preloader.loadManifest(scope.listManifest, true);
      };
    }
  };
});

/* --------------------------------------------
     Begin politicadeprivacidade_controller.coffee
--------------------------------------------
*/


this.myApp.controller("PoliticaController", function($scope, $animate) {
  return $(".scroll-pane").jScrollPane();
});
